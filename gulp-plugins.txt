npm install browser-sync gulp --save-dev
npm i gulp-file-include --save-dev
npm i  del --save-dev
npm i gulp-sass --save-dev
npm i gulp-sass --save-dev
npm install --save-dev sass
npm i gulp-autoprefixer --save-dev
npm i --sev-dev gulp-group-css-media-queries
npm i --save-dev- gulp-clean-css
npm i --save-dev gulp-rename
npm i --save-dev gulp-uglify-es

npm install --save-dev gulp-imagemin
imagemin({

          progressive: true,
        svgoPlugins: [{ removeViewBox: false }],
        interlaced: true,
        optimizationLevel: 3, //0 to 7
      })
    )

npm i --save-dev gulp-webp
npm i --save-dev gulp-webp-in-html
npm i --save-dev gulp-webpcss (webp-css)
npm i --save-dev gulp-svg-sprite
npm i --save-dev gulp-svgstore (run:"npx gulp sprite")
npm i --save-dev gulp-ttf2woff gulp-ttf2woff2
npm i --save-dev gulp-fonter (run: gulp otf2ttf)

function fontsStyles:
function fontsStyle(cb) {
    let file_content = fs.readFileSync(source_folder + '/styles/fonts.scss');
    if (file_content == '') {
        fs.writeFile(source_folder + '/styles/fonts.scss', '', cb);
        return fs.readdir(path.build.fonts, function (err, items) {
            if (items) {
                let c_fontname;
                for (var i = 0; i < items.length; i++) {
                    let fontname = items[i].split('.');
                    fontname = fontname[0];
                    if (c_fontname != fontname) {
                        fs.appendFile(source_folder + '/styles/fonts.scss', '@include font("' + fontname + '", "' + fontname + '", "400", "normal");\r\n', cb);
                    }
                    c_fontname = fontname;
                }
            }
        })
    }
    cb()
}
+
@mixin font($font_name, $file_name, $weight, $style) {

  @font-face {
    font-family: $font_name;
    font-display: swap;
    src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
    font-weight: #{$weight};
    font-style: #{$style};
  }
}




